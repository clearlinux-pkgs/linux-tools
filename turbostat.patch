--- linux-4.14/tools/power/x86/turbostat/turbostat.c.org	2017-11-19 16:29:02.332365225 +0000
+++ linux-4.14/tools/power/x86/turbostat/turbostat.c	2017-11-19 17:20:41.254322321 +0000
@@ -823,35 +823,59 @@
 			outp += sprintf(outp, "%s%d", (printed++ ? delim : ""), t->cpu_id);
 	}
 
-	if (DO_BIC(BIC_Avg_MHz))
-		outp += sprintf(outp, "%s%.0f", (printed++ ? delim : ""),
-			1.0 / units * t->aperf / interval_float);
+	if (DO_BIC(BIC_Avg_MHz)) {
+		if (100.0 * t->mperf/tsc > 0.1) 
+			outp += sprintf(outp, "%s%.0f", (printed++ ? delim : ""),
+				1.0 / units * t->aperf / interval_float);
+		else
+			outp += sprintf(outp, "%s    ", (printed++ ? delim : ""));
+	}
 
-	if (DO_BIC(BIC_Busy))
-		outp += sprintf(outp, "%s%.2f", (printed++ ? delim : ""), 100.0 * t->mperf/tsc);
+	if (DO_BIC(BIC_Busy)) {
+		if (100.0 * t->mperf/tsc >= 0.01) 
+			outp += sprintf(outp, "%s%6.2f", (printed++ ? delim : ""), 100.0 * t->mperf/tsc);
+		else
+			outp += sprintf(outp, "%s    ", (printed++ ? delim : ""));
+	}
 
 	if (DO_BIC(BIC_Bzy_MHz)) {
-		if (has_base_hz)
+		if (100.0 * t->mperf/tsc < 0.1) {
+			outp += sprintf(outp, "%s    ", (printed++ ? delim : ""));
+		} else if (has_base_hz)
 			outp += sprintf(outp, "%s%.0f", (printed++ ? delim : ""), base_hz / units * t->aperf / t->mperf);
 		else
 			outp += sprintf(outp, "%s%.0f", (printed++ ? delim : ""),
 				tsc / units * t->aperf / t->mperf / interval_float);
 	}
 
-	if (DO_BIC(BIC_TSC_MHz))
-		outp += sprintf(outp, "%s%.0f", (printed++ ? delim : ""), 1.0 * t->tsc/units/interval_float);
+	if (DO_BIC(BIC_TSC_MHz)) {
+		if (100.0 * t->mperf/tsc < 0.1) {
+			outp += sprintf(outp, "%s    ", (printed++ ? delim : ""));
+		} else {
+			outp += sprintf(outp, "%s%.0f", (printed++ ? delim : ""), 1.0 * t->tsc/units/interval_float);
+		}
+	}
 
 	/* IRQ */
 	if (DO_BIC(BIC_IRQ)) {
 		if (sums_need_wide_columns)
 			outp += sprintf(outp, "%s%8lld", (printed++ ? delim : ""), t->irq_count);
-		else
-			outp += sprintf(outp, "%s%lld", (printed++ ? delim : ""), t->irq_count);
+		else {
+			if (t->irq_count > 3) 
+				outp += sprintf(outp, "%s%4lld", (printed++ ? delim : ""), t->irq_count);
+			else
+				outp += sprintf(outp, "%s    ", (printed++ ? delim : ""));
+		}
 	}
 
 	/* SMI */
-	if (DO_BIC(BIC_SMI))
-		outp += sprintf(outp, "%s%d", (printed++ ? delim : ""), t->smi_count);
+	if (DO_BIC(BIC_SMI)) {
+		if (t->smi_count) {
+			outp += sprintf(outp, "%s%d", (printed++ ? delim : ""), t->smi_count);
+		} else {
+			outp += sprintf(outp, "%s ", (printed++ ? delim : ""));
+		}
+	}
 
 	/* Added counters */
 	for (i = 0, mp = sys.tp; mp; i++, mp = mp->next) {
@@ -863,13 +887,21 @@
 		} else if (mp->format == FORMAT_DELTA) {
 			if ((mp->type == COUNTER_ITEMS) && sums_need_wide_columns)
 				outp += sprintf(outp, "%s%8lld", (printed++ ? delim : ""), t->counter[i]);
-			else
-				outp += sprintf(outp, "%s%lld", (printed++ ? delim : ""), t->counter[i]);
+			else {
+				if (t->counter[i]) 
+					outp += sprintf(outp, "%s%4lld", (printed++ ? delim : ""), t->counter[i]);
+				else
+					outp += sprintf(outp, "%s    ", (printed++ ? delim : ""));
+			}
 		} else if (mp->format == FORMAT_PERCENT) {
-			if (mp->type == COUNTER_USEC)
-				outp += sprintf(outp, "%s%.2f", (printed++ ? delim : ""), t->counter[i]/interval_float/10000);
-			else
-				outp += sprintf(outp, "%s%.2f", (printed++ ? delim : ""), 100.0 * t->counter[i]/tsc);
+			if (t->counter[i] == 0) {
+				outp += sprintf(outp, "%s ", (printed++ ? delim : ""));
+			} else {
+				if (mp->type == COUNTER_USEC)
+					outp += sprintf(outp, "%s%5.1f", (printed++ ? delim : ""), t->counter[i]/interval_float/10000);
+				else
+					outp += sprintf(outp, "%s%5.1f", (printed++ ? delim : ""), 100.0 * t->counter[i]/tsc);
+			}
 		}
 	}
 
